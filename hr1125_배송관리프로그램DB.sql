-- 고객 정보 테이블
DROP TABLE CUSTOMER;
CREATE TABLE CUSTOMER(
    CODE CHAR(2), -- 회원코드, PK
    ID VARCHAR2(15) NOT NULL, -- 아이디, UK
    PWD VARCHAR2(15) NOT NULL, -- 비밀번호
    NAME VARCHAR2(6) NOT NULL, -- 고객 이름
    ADDRESS VARCHAR2(50) NOT NULL, -- 주소
    PHONE CHAR(13) NOT NULL, -- 핸드폰 번호, UK
    CDATE DATE DEFAULT SYSDATE
);
ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_CODE_PK PRIMARY KEY(CODE);
ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_ID_UK UNIQUE(ID);
ALTER TABLE CUSTOMER ADD CONSTRAINT CUSTOMER_PHONE_UK UNIQUE(PHONE);

-- 회원코드 시퀀스 생성
CREATE SEQUENCE CUSTOMER_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

-- 회원코드 트리거 생성
CREATE OR REPLACE TRIGGER CUSTOMER_TRG
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
BEGIN
    :NEW.CODE := LPAD(CUSTOMER_SEQ.NEXTVAL, 2, '0');
END;
/

SELECT COUNT(*) AS COUNT  FROM CUSTOMER WHERE ID = 'jjj12345';
COMMIT;

INSERT INTO CUSTOMER (ID, PWD, NAME, ADDRESS, PHONE)
VALUES ('jjj12345', 'jjj12345', 'JJJ', '경기도', '010-1234-5678');

SELECT * FROM CUSTOMER;

-- 상품 정보 테이블
CREATE TABLE PRODUCT (
    CODE CHAR(2), -- 상품코드, PK
    NAME VARCHAR2(10) NOT NULL , -- 상품명, UK
    PRICE NUMBER(7) NOT NULL, -- 가격
    REMAIN NUMBER(3) NOT NULL -- 잔여수량
);
ALTER TABLE PRODUCT ADD CONSTRAINT PRODUCT_CODE_PK PRIMARY KEY(CODE);
ALTER TABLE PRODUCT ADD CONSTRAINT PRODUCT_NAME_UK UNIQUE(NAME);

-- 상품코드 시퀀스 생성
CREATE SEQUENCE PRODUCT_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

-- 상품코드 트리거 생성
DROP TRIGGER PRODUCT_TRG;

CREATE OR REPLACE TRIGGER PRODUCT_TRG
BEFORE INSERT ON PRODUCT
FOR EACH ROW
BEGIN
    :NEW.CODE := LPAD(PRODUCT_SEQ.NEXTVAL, 2, '0');
END;
/

INSERT INTO PRODUCT (NAME, PRICE, REMAIN)
VALUES ('텀블러',10000, 100);
COMMIT;

SELECT * FROM PRODUCT;

-- 회사 정보 테이블
DROP TABLE COMPANY;
CREATE TABLE COMPANY(
    CODE CHAR(2), -- 업체코드, PK
    NAME VARCHAR2(20) NOT NULL, -- 업체명, UK
    PRICE NUMBER(7) NOT NULL -- 배송비
);

ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_CODE_PK PRIMARY KEY(CODE);
ALTER TABLE COMPANY ADD CONSTRAINT COMPANY_NAME_UK UNIQUE(NAME);

-- 업체코드 시퀀스 생성
CREATE SEQUENCE COMPANY_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

-- 업체코드 트리거 생성
DROP TRIGGER COMPANY_TRG;

CREATE OR REPLACE TRIGGER COMPANY_TRG
BEFORE INSERT ON COMPANY
FOR EACH ROW
BEGIN
    :NEW.CODE := LPAD(COMPANY_SEQ.NEXTVAL, 2, '0');
END;
/

INSERT INTO COMPANY (NAME, PRICE)
VALUES ('CJ대한통운', 3000);
COMMIT;

SELECT * FROM COMPANY;


-- 주문 정보 테이블
DROP TABLE BUY;
CREATE TABLE BUY(
    CODE CHAR(2), -- 주문코드, PK
    CUST_CODE CHAR(2), -- 회원코드,FK
    PRO_CODE CHAR(2), -- 상품코드, FK
    COP_CODE CHAR(2), --업체코드, FK
    AMOUNT NUMBER(3) NOT NULL, -- 주문수량
    TOTAL NUMBER(8) NOT NULL -- 총 금액
);

ALTER TABLE BUY ADD CONSTRAINT BUY_CODE_PK PRIMARY KEY(CODE);
ALTER TABLE BUY ADD CONSTRAINT BUY_CUSTOMER_CODE_FK FOREIGN KEY(CUST_CODE)
    REFERENCES CUSTOMER(CODE) ON DELETE SET NULL;
ALTER TABLE BUY ADD CONSTRAINT BUY_PRODUCT_CODE_FK FOREIGN KEY(PRO_CODE)
    REFERENCES PRODUCT(CODE) ON DELETE SET NULL;
ALTER TABLE BUY ADD CONSTRAINT BUY_COMPANY_CODE_FK FOREIGN KEY(COP_CODE)
    REFERENCES COMPANY(CODE) ON DELETE SET NULL;
    

SELECT B.CODE AS ORDER_CODE, C.NAME AS CUSTOMER_NAME, P.NAME AS PRODUCT_NAME, CO.NAME AS COMPANY_NAME, B.AMOUNT, B.TOTAL
    FROM BUY B 
    INNER JOIN CUSTOMER C ON B.CUST_CODE = C.CODE 
    INNER JOIN PRODUCT P ON B.PRO_CODE = P.CODE
    INNER JOIN COMPANY CO ON B.COP_CODE = CO.CODE;